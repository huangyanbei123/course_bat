@echo off 
:loop
cls
echo 您要查找什么文件？
set /p choose=输入后缀并回车（例：bat）
dir *.%choose% /s /w /d >1.ini
rem dir：查看文件名或文件夹名
find "%choose%" "%~dp01.ini">2.ini
rem find：在文件中搜索字符
cls
echo 1.显示详细信息 
echo 2.陈列所有文件
set /p st=输入序号并回车：
start "" /wait "%~dp0%st%.ini"
del *.ini
goto loop
::======================================================================
goto note
生词：
dir：查看文件名或文件夹名
*：代任意字符，人们通常叫它【通配符】。?也是通配符的一种，代单个字符。
find：在文件中搜索字符
句型：
[?] dir [X.Y] [/s] [/w] [/d] [/...] [X:PATH\XXX]：显示 X:PATH\XX中的X.Y文件
（dir的开关太多了，我都懒得列举了= =...）
=================/?：包含以Y打头的后缀
例：? dir X.jp D:Y\Z 则会X.jpg和X.jpeg都会被显示
=================/s：显示指定目录和所有子目录中的文件
=================/w：使用宽列表显示
=================/d：分栏列出
=================/l：小写显示
=================X:PATH\XXX:不输入则默认当前文件夹
find [/v] [/c] [/n] [/off[line]] "XXX" X:PATH\XXX.YYY：
在查找X:PATH\XXX.YYY中查找含有XXX的行并显示
=================/v：显示所有未包含指定字符串的行
=================/c：只显示指定字符串的行有几行
=================/n：只显示指定字符串的行号
=================/off[line]：不跳过脱机属性的文件
作业：
自行百度dir的其它开关（我这样做是不是很没节操...）
结语：
dos是bat的body，在那个黑底白字的时代，那个计算机真的是用来计算和储存数据的年代，
人们检索文件也只能一个字符一个字符地敲打命令。
bat的硬伤是运算，受到数位和小数的限制，但仍然坚强地活跃在因特网的每一个角落。
它亲切可近，接近自然语言，纵然你有些许语法错误也会默默承受；
它与时俱进，在百家争鸣百花盛开的新时代，能和vbs，js等诸多语言完美兼容，甚至混编。
它具有灵活的操纵性，可适应各种复杂的计算机操作。
它对创作者们几乎不设门槛，简单且开源，连编程环境也不需要，只要你愿意，用功能机、学习机都能编写。
它永远的目标――化繁为简。
:note